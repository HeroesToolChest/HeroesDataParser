parameters:
  name: ''
  pool: ''
  artifacts: false
  deploy-nuget: false
  deploy-github: false

jobs:
  - job: ${{ parameters.name }}
    pool: ${{ parameters.pool }}
    variables:
      config_debug: debug
      config_release: release
    strategy:
      matrix:
        Build_Debug:
          configuration: $(config_debug)
        Build_Release:
          configuration: $(config_release)
    steps:
    - task: DotNetCoreInstaller@0
      displayName: dotnet installer 2.2.100
      inputs:
        version: '2.2.100'
        
    - script: dotnet build -c $(configuration)
      displayName: Build
 
    - script: dotnet test -c $(configuration) --no-build --logger trx --collect "Code coverage"
      displayName: Run tests
      
    - task: PublishTestResults@2
      displayName: Publish tests
      inputs:
        testRunner: VSTest
        testResultsFiles: '**/*.trx'
        
    - ${{ if eq(parameters.artifacts, 'true') }}:
      - powershell: dotnet publish -c release -o .\bin\publish\any\
        displayName: Publish release [fdd]
        
      - powershell: dotnet pack HeroesData\HeroesData.csproj -c release --no-build -o .\bin\nupkg\any\
        displayName: Nuget pack [fdd]
 
      - powershell: (get-content HeroesData\HeroesData.csproj).Replace('<PackAsTool>true</PackAsTool>','<PackAsTool>false</PackAsTool>') | out-file HeroesData_self.csproj
        displayName: SCD Prep
        
      - powershell: dotnet publish HeroesData\HeroesData_self.csproj -c release --no-build --self-contained -r win-x64 -o .\bin\publish\win-x64\
        displayName: Publish release [win-x64]
    
      - powershell: dotnet publish HeroesData\HeroesData_self.csproj -c release --no-build --self-contained -r osx-x64 -o .\bin\publish\osx-x64\
        displayName: Publish release [osx-x64]
        
      - powershell: dotnet publish HeroesData\HeroesData_self.csproj -c release --no-build --self-contained -r linux-x64 -o .\bin\publish\linux-x64\
        displayName: Publish release [linux-x64]
